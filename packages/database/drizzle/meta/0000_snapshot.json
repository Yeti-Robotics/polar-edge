{
  "id": "0efcf85a-498c-43f4-b091-fd837bda7137",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.account": {
      "name": "account",
      "schema": "",
      "columns": {
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "providerAccountId": {
          "name": "providerAccountId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "expires_at": {
          "name": "expires_at",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "token_type": {
          "name": "token_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "session_state": {
          "name": "session_state",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "account_userId_user_id_fk": {
          "name": "account_userId_user_id_fk",
          "tableFrom": "account",
          "tableTo": "user",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "account_provider_providerAccountId_pk": {
          "name": "account_provider_providerAccountId_pk",
          "columns": [
            "provider",
            "providerAccountId"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.authenticator": {
      "name": "authenticator",
      "schema": "",
      "columns": {
        "credentialID": {
          "name": "credentialID",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "providerAccountId": {
          "name": "providerAccountId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "credentialPublicKey": {
          "name": "credentialPublicKey",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "counter": {
          "name": "counter",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "credentialDeviceType": {
          "name": "credentialDeviceType",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "credentialBackedUp": {
          "name": "credentialBackedUp",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "transports": {
          "name": "transports",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "authenticator_userId_user_id_fk": {
          "name": "authenticator_userId_user_id_fk",
          "tableFrom": "authenticator",
          "tableTo": "user",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "authenticator_credentialID_unique": {
          "name": "authenticator_credentialID_unique",
          "nullsNotDistinct": false,
          "columns": [
            "credentialID"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.match": {
      "name": "match",
      "schema": "",
      "columns": {
        "match_id": {
          "name": "match_id",
          "type": "varchar(32)",
          "primaryKey": true,
          "notNull": true
        },
        "comp_level": {
          "name": "comp_level",
          "type": "varchar(2)",
          "primaryKey": false,
          "notNull": true
        },
        "set_number": {
          "name": "set_number",
          "type": "smallint",
          "primaryKey": false,
          "notNull": true
        },
        "match_number": {
          "name": "match_number",
          "type": "smallint",
          "primaryKey": false,
          "notNull": true
        },
        "event_key": {
          "name": "event_key",
          "type": "varchar(16)",
          "primaryKey": false,
          "notNull": true
        },
        "winning_alliance": {
          "name": "winning_alliance",
          "type": "alliance",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.match_score_breakdown": {
      "name": "match_score_breakdown",
      "schema": "",
      "columns": {
        "match_id": {
          "name": "match_id",
          "type": "varchar(32)",
          "primaryKey": false,
          "notNull": true
        },
        "alliance": {
          "name": "alliance",
          "type": "alliance",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "auto_line_robot1": {
          "name": "auto_line_robot1",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "auto_line_robot2": {
          "name": "auto_line_robot2",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "auto_line_robot3": {
          "name": "auto_line_robot3",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "auto_mobility_points": {
          "name": "auto_mobility_points",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "auto_points": {
          "name": "auto_points",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "barge_bonus_achieved": {
          "name": "barge_bonus_achieved",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "coopertition_criteria_met": {
          "name": "coopertition_criteria_met",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "coral_bonus_achieved": {
          "name": "coral_bonus_achieved",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "end_game_barge_points": {
          "name": "end_game_barge_points",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "end_game_robot1": {
          "name": "end_game_robot1",
          "type": "cage",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "end_game_robot2": {
          "name": "end_game_robot2",
          "type": "cage",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "end_game_robot3": {
          "name": "end_game_robot3",
          "type": "cage",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "foul_count": {
          "name": "foul_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "foul_points": {
          "name": "foul_points",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "g206_penalty": {
          "name": "g206_penalty",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "g408_penalty": {
          "name": "g408_penalty",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "g424_penalty": {
          "name": "g424_penalty",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "net_algae_count": {
          "name": "net_algae_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "rp": {
          "name": "rp",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "tech_foul_count": {
          "name": "tech_foul_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "teleop_coral_count": {
          "name": "teleop_coral_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "teleop_coral_points": {
          "name": "teleop_coral_points",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "teleop_points": {
          "name": "teleop_points",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "total_points": {
          "name": "total_points",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "wall_algae_count": {
          "name": "wall_algae_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "match_score_breakdown_match_id_match_match_id_fk": {
          "name": "match_score_breakdown_match_id_match_match_id_fk",
          "tableFrom": "match_score_breakdown",
          "tableTo": "match",
          "columnsFrom": [
            "match_id"
          ],
          "columnsTo": [
            "match_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.session": {
      "name": "session",
      "schema": "",
      "columns": {
        "sessionToken": {
          "name": "sessionToken",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "expires": {
          "name": "expires",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "session_userId_user_id_fk": {
          "name": "session_userId_user_id_fk",
          "tableFrom": "session",
          "tableTo": "user",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.stand_form": {
      "name": "stand_form",
      "schema": "",
      "columns": {
        "stand_form_id": {
          "name": "stand_form_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "team_number": {
          "name": "team_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "match_id": {
          "name": "match_id",
          "type": "varchar(32)",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "left_black_line": {
          "name": "left_black_line",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "auto_coral_level1": {
          "name": "auto_coral_level1",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "auto_coral_level2": {
          "name": "auto_coral_level2",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "auto_coral_level3": {
          "name": "auto_coral_level3",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "auto_coral_level4": {
          "name": "auto_coral_level4",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "auto_algae_processed": {
          "name": "auto_algae_processed",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "auto_algae_netted": {
          "name": "auto_algae_netted",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "teleop_coral_level1": {
          "name": "teleop_coral_level1",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "teleop_coral_level2": {
          "name": "teleop_coral_level2",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "teleop_coral_level3": {
          "name": "teleop_coral_level3",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "teleop_coral_level4": {
          "name": "teleop_coral_level4",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "teleop_algae_processed": {
          "name": "teleop_algae_processed",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "teleop_algae_netted": {
          "name": "teleop_algae_netted",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "teleop_algae_thrown": {
          "name": "teleop_algae_thrown",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "cage_climb": {
          "name": "cage_climb",
          "type": "cage",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "defense_rating": {
          "name": "defense_rating",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "comments": {
          "name": "comments",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "stand_form_user_id_user_id_fk": {
          "name": "stand_form_user_id_user_id_fk",
          "tableFrom": "stand_form",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "stand_form_team_number_match_id_team_match_team_number_match_id_fk": {
          "name": "stand_form_team_number_match_id_team_match_team_number_match_id_fk",
          "tableFrom": "stand_form",
          "tableTo": "team_match",
          "columnsFrom": [
            "team_number",
            "match_id"
          ],
          "columnsTo": [
            "team_number",
            "match_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.team": {
      "name": "team",
      "schema": "",
      "columns": {
        "team_number": {
          "name": "team_number",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "team_name": {
          "name": "team_name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.team_match": {
      "name": "team_match",
      "schema": "",
      "columns": {
        "match_id": {
          "name": "match_id",
          "type": "varchar(32)",
          "primaryKey": false,
          "notNull": true
        },
        "team_number": {
          "name": "team_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "alliance": {
          "name": "alliance",
          "type": "alliance",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "alliance_position": {
          "name": "alliance_position",
          "type": "smallint",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "team_match_match_id_match_match_id_fk": {
          "name": "team_match_match_id_match_match_id_fk",
          "tableFrom": "team_match",
          "tableTo": "match",
          "columnsFrom": [
            "match_id"
          ],
          "columnsTo": [
            "match_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "team_match_team_number_team_team_number_fk": {
          "name": "team_match_team_number_team_team_number_fk",
          "tableFrom": "team_match",
          "tableTo": "team",
          "columnsFrom": [
            "team_number"
          ],
          "columnsTo": [
            "team_number"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "team_match_match_id_team_number_pk": {
          "name": "team_match_match_id_team_number_pk",
          "columns": [
            "match_id",
            "team_number"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.tournament": {
      "name": "tournament",
      "schema": "",
      "columns": {
        "tournament_id": {
          "name": "tournament_id",
          "type": "varchar(16)",
          "primaryKey": true,
          "notNull": true
        },
        "event_name": {
          "name": "event_name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "start_date": {
          "name": "start_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "end_date": {
          "name": "end_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "is_current": {
          "name": "is_current",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {
        "tournament_current_idx": {
          "name": "tournament_current_idx",
          "columns": [
            {
              "expression": "is_current",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "where": "\"tournament\".\"is_current\" = true",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user": {
      "name": "user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "emailVerified": {
          "name": "emailVerified",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "guildNickname": {
          "name": "guildNickname",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "user_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'user'"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_email_unique": {
          "name": "user_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.verificationToken": {
      "name": "verificationToken",
      "schema": "",
      "columns": {
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires": {
          "name": "expires",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.alliance": {
      "name": "alliance",
      "schema": "public",
      "values": [
        "red",
        "blue",
        ""
      ]
    },
    "public.cage": {
      "name": "cage",
      "schema": "public",
      "values": [
        "None",
        "ShallowCage",
        "DeepCage",
        "Parked"
      ]
    },
    "public.user_role": {
      "name": "user_role",
      "schema": "public",
      "values": [
        "user",
        "admin",
        "guest",
        "banished"
      ]
    },
    "public.yes_no": {
      "name": "yes_no",
      "schema": "public",
      "values": [
        "Yes",
        "No"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {
    "public.team_stats": {
      "columns": {
        "team_number": {
          "name": "team_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "team_name": {
          "name": "team_name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "auto_coral_level_1": {
          "name": "auto_coral_level_1",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "auto_coral_level_2": {
          "name": "auto_coral_level_2",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "auto_coral_level_3": {
          "name": "auto_coral_level_3",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "auto_coral_level_4": {
          "name": "auto_coral_level_4",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "auto_algae_processor": {
          "name": "auto_algae_processor",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "auto_algae_net": {
          "name": "auto_algae_net",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "teleop_coral_level_1": {
          "name": "teleop_coral_level_1",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "teleop_coral_level_2": {
          "name": "teleop_coral_level_2",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "teleop_coral_level_3": {
          "name": "teleop_coral_level_3",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "teleop_coral_level_4": {
          "name": "teleop_coral_level_4",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "teleop_algae_processor": {
          "name": "teleop_algae_processor",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "teleop_algae_net": {
          "name": "teleop_algae_net",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "teleop_algae_thrown": {
          "name": "teleop_algae_thrown",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "park_percentage": {
          "name": "park_percentage",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "shallow_percentage": {
          "name": "shallow_percentage",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "deep_percentage": {
          "name": "deep_percentage",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "initiation_line": {
          "name": "initiation_line",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "defense_rating": {
          "name": "defense_rating",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        }
      },
      "definition": "\nWITH combinedStats AS (\n    SELECT \n        tf.team_number, \n        tf.match_id, \n        AVG(tf.auto_coral_level1) AS auto_coral_level_1, \n        AVG(tf.auto_coral_level2) AS auto_coral_level_2, \n        AVG(tf.auto_coral_level3) AS auto_coral_level_3, \n        AVG(tf.auto_coral_level4) AS auto_coral_level_4,\n        AVG(tf.auto_algae_processed) AS auto_algae_processor, \n        AVG(tf.auto_algae_netted) AS auto_algae_net,\n        AVG(tf.teleop_coral_level1) AS teleop_coral_level_1, \n        AVG(tf.teleop_coral_level2) AS teleop_coral_level_2, \n        AVG(tf.teleop_coral_level3) AS teleop_coral_level_3, \n        AVG(tf.teleop_coral_level4) AS teleop_coral_level_4,\n        AVG(tf.teleop_algae_processed) AS teleop_algae_processor, \n        AVG(tf.teleop_algae_netted) AS teleop_algae_net,\n        AVG(tf.teleop_algae_thrown) AS teleop_algae_thrown, \n        AVG(tf.defense_rating) AS defense_rating,\n        CAST(SUM(CASE WHEN tf.left_black_line THEN 1 ELSE 0 END) AS REAL) / COUNT(*) AS initiation_line,\n        CAST(SUM(CASE WHEN tf.cage_climb = 'Parked' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) AS park_percentage,\n        CAST(SUM(CASE WHEN tf.cage_climb = 'DeepCage' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) AS deep_percentage,\n        CAST(SUM(CASE WHEN tf.cage_climb = 'ShallowCage' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) AS shallow_percentage\n    FROM stand_form tf\n    GROUP BY tf.team_number, tf.match_id\n),\nteamMatches AS (\n    SELECT \n        tm.team_number, \n        t.team_name, \n        tm.match_id\n    FROM team_match tm \n    JOIN team t ON tm.team_number = t.team_number\n)\nSELECT\n    cs.auto_coral_level_1,\n    cs.auto_coral_level_2,\n    cs.auto_coral_level_3,\n    cs.auto_coral_level_4,\n    cs.auto_algae_processor,\n    cs.auto_algae_net,\n    cs.teleop_coral_level_1,\n    cs.teleop_coral_level_2,\n    cs.teleop_coral_level_3,\n    cs.teleop_coral_level_4,\n    cs.teleop_algae_processor,\n    cs.teleop_algae_net,\n    cs.teleop_algae_thrown,\n    cs.defense_rating,\n    cs.initiation_line,\n    cs.park_percentage,\n    cs.deep_percentage,\n    cs.shallow_percentage,\n    tm.team_number,\n    tm.team_name\nFROM\n    combinedStats cs\nJOIN\n    teamMatches tm ON cs.team_number = tm.team_number AND cs.match_id = tm.match_id\nORDER BY\n    tm.team_number\n",
      "name": "team_stats",
      "schema": "public",
      "isExisting": false,
      "materialized": false
    }
  },
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}